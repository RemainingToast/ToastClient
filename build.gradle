plugins {
    id 'java'
    id 'fabric-loom'
    id 'maven-publish'
    id 'io.freefair.lombok' version '6.3.0'
    id 'org.ajoberstar.grgit' version '5.0.0'
    id 'org.jetbrains.kotlin.jvm' version '1.8.21'
}

version = "${project.mod_version}+${grgit.head().abbreviatedId}"
group = project.maven_group

repositories {
    mavenCentral()
    maven {
        url 'https://jitpack.io'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    /*include modImplementation("com.github.0x3C50:Renderer:${project.renderer_version}")*/
    include modImplementation("com.github.QuantumClient:Energy:${project.events_version}")
    include modImplementation("com.google.guava:guava:${project.guava_version}")
}

base {
    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_17
    archivesBaseName = project.archives_base_name
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
tasks.withType(JavaCompile).configureEach {
    //noinspection all
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "17"
    }
}

// @see https://stackoverflow.com/a/65923469
tasks.register('createProperties') {
    doLast {
        new File("src/main/resources/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

classes {
    dependsOn createProperties
}